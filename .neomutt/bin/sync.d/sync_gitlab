#!/usr/bin/env bash
# deps: [ notmuch, jq, glab, parallel, sort, awk ]
#
# required notmuch config:
# [index]
# header.GitLabProjectPath=X-GitLab-Project-Path
# header.GitLabMergeRequestIID=X-GitLab-MergeRequest-IID
# header.GitLabPipelineId=X-GitLab-Pipeline-Id
# [query]
# gitlab_com=from:gitlab@mg.gitlab.com
# gitlab_example=from:gitlab@example.com
# gitlab=query:gitlab_com OR query:gitlab_example
# gitlab_is_mr=GitLabMergeRequestIID:0* OR GitLabMergeRequestIID:1* OR GitLabMergeRequestIID:2* OR GitLabMergeRequestIID:3* OR GitLabMergeRequestIID:4* OR GitLabMergeRequestIID:5* OR GitLabMergeRequestIID:6* OR GitLabMergeRequestIID:7* OR GitLabMergeRequestIID:8* OR GitLabMergeRequestIID:9*
# [show]
# extra_headers=X-GitLab-Project-Path;X-GitLab-MergeRequest-IID

function get_projects_and_mr_ids(){
	notmuch show --format=json "is:inbox AND query:gitlab AND query:gitlab_is_mr" | jq -j '.[] | .[] | .[0].headers|."X-GitLab-Project-Path"," ",."X-GitLab-MergeRequest-IID","\n"'

}

function iterate_messages(){
	local gl_host
	while read -r project_path mr_id
	do
		gl_host=$(notmuch show --limit=1 "GitLabProjectPath:$project_path AND GitLabMergeRequestIID:$mr_id" | awk '/You\047re receiving this email because/ {print $NF}' | sed 's/\.$//' | head -n1)
		printf '%s %s %s\n' "$gl_host" "$project_path" "$mr_id"
	done
}

function prepare_notmuch_batch_tag(){
	local project_path mr_id mr_status token_var pipeline_id
	local -x GITLAB_HOST GITLAB_TOKEN

	read -r GITLAB_HOST project_path mr_id
	token_var="GL_TOKEN_${GITLAB_HOST//./_}"
	GITLAB_TOKEN="${!token_var}"
	# shellcheck disable=SC2016
	response=$(glab api graphql -f query='query getMergeRequestPipelines($projectPath: ID!, $mergeRequestIid: String!) { project(fullPath: $projectPath) { mergeRequest(iid: $mergeRequestIid) { state pipelines { nodes { id } } } } }' -F "projectPath=$project_path" -f "mergeRequestIid=$mr_id")

	mr_status=$(jq -r '.data.project.mergeRequest.state' <<<"$response")
	if [[ $mr_status == "closed" || $mr_status == "merged" ]]
	then
		printf 1>&2 'archiving %s/%s!%s\n' "$GITLAB_HOST" "$project_path" "$mr_id"
		printf '%s -- GitLabProjectPath:%s AND GitLabMergeRequestIID:%s\n' -inbox "$project_path" "$mr_id" # MR

		for pipeline_id in $(jq -r '.data.project.mergeRequest.pipelines.nodes[].id' <<<"$response" | awk -F / '{print $NF}')
		do
			printf '%s %s -- GitLabProjectPath:%s AND GitLabPipelineId:%s\n' -inbox -unread "$project_path" "$pipeline_id" # PIPELINE
		done
	fi
}

export -f prepare_notmuch_batch_tag

function run(){
	# shellcheck source=/Users/jindraj/.bash_local
	source "$HOME/.bash_local"

	get_projects_and_mr_ids \
		| iterate_messages \
		| sort -u \
		| parallel -P "$(nproc)" -N1 --pipe prepare_notmuch_batch_tag \
		| notmuch tag --batch
}

run "$@"
